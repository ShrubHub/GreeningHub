{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 // Complexity revealed in the greening of the Arctic\
// January 2019\
\
// Arctic greening trends - MODIS\
\
var Tundra = ee.FeatureCollection("projects/team-shrub/Greening_note/Tundra");\
var EurAs = ee.FeatureCollection("projects/team-shrub/Greening_note/Eurasia180");\
var NorAm = ee.FeatureCollection("projects/team-shrub/Greening_note/NorthAmerica180");\
    \
// Define a FeatureCollection: regions of the Arctic\
var regions = ee.FeatureCollection([\
  ee.Feature(Tundra.geometry(), \{label: 'Tundra'\}),  // Tundra\
  ee.Feature(EurAs.geometry(), \{label: 'Eurasia'\}),  // Eurasia\
  ee.Feature(NorAm.geometry(), \{label: 'North America'\})  // North America\
  ]);\
Map.addLayer(regions);\
\
// Load MODIS data\
var modis = ee.ImageCollection("MODIS/006/MOD13A1");\
\
// Set duration of interest\
var start = ee.Date('2000-01-01');\
var end = ee.Date('2018-12-31');\
\
// Create sequence of years for mapping\
var years = ee.List.sequence(start.get('year'), end.get('year'));\
\
// Define function to mask pixels with high SummaryQA\
var maskSummaryQA = function(image) \{\
  return image.updateMask(image.select("SummaryQA").lt(1));\
\};\
\
// Apply to image collection\
var modisMaskedQA = modis.map(maskSummaryQA);\
\
// Add in water Mask and print it.  Water = 1, land = 0\
var waterMask = ee.ImageCollection('MODIS/006/MOD44W')\
              .filter(ee.Filter.date('2015-01-01', '2015-01-02'))\
              .select('water_mask')\
              .first();\
\
// var waterMaskVis = \{\
//   min: 0.0,\
//   max: 1.0,\
//   palette: ['bcba99', '2d0491'],\
// \};\
// print(waterMask);\
// Map.addLayer(waterMask, waterMaskVis, 'Water Mask');\
\
// Mask out water\
var maskWater = function(image)\{\
  return image.updateMask(waterMask.select('water_mask').lt(1));\
\};\
var modisMasked = modisMaskedQA.map(maskWater);\
\
// Composite by max NDVI for years in list\
var modisAnnual = ee.ImageCollection.fromImages(\
      years.map(function (y) \{\
        return modisMasked\
        .filter(ee.Filter.calendarRange(y, y, 'year'))\
        .filter(ee.Filter.calendarRange(7,8,'month'))\
                    .select('NDVI')\
                    .max()\
                    .set('year', y);\
\}));\
\
// Define function to calculate average NDVI in region from image\
var arcticAverage = function(image)\{\
  return(\
        image.reduceRegions(\{              \
        collection: regions,  \
        reducer: ee.Reducer.mean(),     \
        scale: 5000,\})\
        .select(['label', 'mean'], ['region', 'NDVI'], false)\
        .map(function(feature) \{\
          return(\
            feature.set(\
              'year', \
              image.get('year')));\
        \}) // add year property to feature.\
  );\
\};\
\
// Map average NDVI function over max-value Image Collection\
var ndviTimeSeries = modisAnnual.map(arcticAverage);\
print(ndviTimeSeries.flatten());\
\
//Export the data to a table for further analysis\
Export.table.toDrive(\{\
  collection:ndviTimeSeries.flatten(),\
  description:"MODIS_NDVItimeseries_QAs_regions",\
  fileFormat:"CSV"\
\});}